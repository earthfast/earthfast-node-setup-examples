services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./http-locations.conf:/etc/nginx/conf.d/http-locations.conf:ro
      - ./https-locations.conf:/etc/nginx/conf.d/https-locations.conf:ro
      - ./ssl.conf:/etc/nginx/conf.d/ssl.conf:ro
      - ./letsencrypt:/etc/letsencrypt
      - ./webroot:/var/www/certbot
    environment:
      - NGINX_HOST=${SERVER_NAME}
      - SETUP_SSL=${SETUP_SSL:-false}
    command: >
      /bin/sh -c " if [ '${SETUP_SSL}' = 'true' ]; then
        if [ ! -f /etc/letsencrypt/live/$${NGINX_HOST}/fullchain.pem ]; then
          echo 'SSL certificates not found, using HTTP configuration';
          ln -sf /etc/nginx/conf.d/http-locations.conf /etc/nginx/conf.d/locations.conf;
        else
          echo 'SSL certificates found, using HTTPS configuration';
          ln -sf /etc/nginx/conf.d/https-locations.conf /etc/nginx/conf.d/locations.conf;
          ln -sf /etc/nginx/conf.d/ssl.conf /etc/nginx/conf.d/ssl-enabled.conf;
        fi
      else
        echo 'Using HTTP configuration';
        ln -sf /etc/nginx/conf.d/http-locations.conf /etc/nginx/conf.d/locations.conf;
      fi && nginx -g 'daemon off;'"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  certbot:
    image: certbot/certbot
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./webroot:/var/www/certbot
    command: >
      certonly --webroot --webroot-path=/var/www/certbot --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email --force-renewal -d ${SERVER_NAME}
    depends_on:
      - nginx
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  content-node:
    image: earthfast/content-node:latest
    environment:
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - DATABASE_DIR=/data/database
      - ETH_RPC_ENDPOINT=${RPC_URL}
      - HOSTING_CACHE_DIR=/data/hosting_cache
      - HTTP_PORT=5000
      - NODE_ID=${NODE_ID}
    volumes:
      - ${DATABASE_DIR}:/data/database
      - ${HOSTING_CACHE_DIR}:/data/hosting_cache
    ports:
      - "5000:5000"
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 60 --cleanup
    restart: unless-stopped

volumes:
  letsencrypt:
