services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./webroot:/var/www/certbot
    environment:
      - NGINX_HOST=${SERVER_NAME}
      - SETUP_SSL=${SETUP_SSL:-false}
    command: >
      /bin/sh -c " echo 'Generating nginx configuration...';

      # Write base configuration echo 'server_names_hash_bucket_size 128;' > /etc/nginx/conf.d/default.conf; echo 'server {' >> /etc/nginx/conf.d/default.conf; echo '    listen 80;' >> /etc/nginx/conf.d/default.conf; echo '    listen [::]:80;' >> /etc/nginx/conf.d/default.conf; echo '    server_name $NGINX_HOST;' >> /etc/nginx/conf.d/default.conf; echo '    location /.well-known/acme-challenge/ {' >> /etc/nginx/conf.d/default.conf; echo '        root /var/www/certbot;' >> /etc/nginx/conf.d/default.conf; echo '    }' >> /etc/nginx/conf.d/default.conf; echo '    location / {' >> /etc/nginx/conf.d/default.conf; echo '        proxy_pass http://content-node:5000;' >> /etc/nginx/conf.d/default.conf; echo '        proxy_set_header X-Forwarded-For $remote_addr;' >> /etc/nginx/conf.d/default.conf; echo '        proxy_set_header Host $http_host;' >> /etc/nginx/conf.d/default.conf; echo '    }' >> /etc/nginx/conf.d/default.conf; echo '}' >> /etc/nginx/conf.d/default.conf;

      if [ '${SETUP_SSL}' = 'true' ] && [ -f /etc/letsencrypt/live/$${NGINX_HOST}/fullchain.pem ]; then
        echo 'Adding SSL configuration...';
        echo 'server {' >> /etc/nginx/conf.d/default.conf;
        echo '    listen 443 ssl;' >> /etc/nginx/conf.d/default.conf;
        echo '    listen [::]:443 ssl;' >> /etc/nginx/conf.d/default.conf;
        echo '    server_name $NGINX_HOST;' >> /etc/nginx/conf.d/default.conf;
        echo '    ssl_certificate /etc/letsencrypt/live/$NGINX_HOST/fullchain.pem;' >> /etc/nginx/conf.d/default.conf;
        echo '    ssl_certificate_key /etc/letsencrypt/live/$NGINX_HOST/privkey.pem;' >> /etc/nginx/conf.d/default.conf;
        echo '    location / {' >> /etc/nginx/conf.d/default.conf;
        echo '        proxy_pass http://content-node:5000;' >> /etc/nginx/conf.d/default.conf;
        echo '        proxy_set_header X-Forwarded-For $remote_addr;' >> /etc/nginx/conf.d/default.conf;
        echo '        proxy_set_header Host $http_host;' >> /etc/nginx/conf.d/default.conf;
        echo '    }' >> /etc/nginx/conf.d/default.conf;
        echo '}' >> /etc/nginx/conf.d/default.conf;
      fi;

      echo 'Final nginx configuration:'; cat /etc/nginx/conf.d/default.conf;

      nginx -g 'daemon off;'"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  certbot:
    image: certbot/certbot
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./webroot:/var/www/certbot
    command: >
      certonly --webroot --webroot-path=/var/www/certbot --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email --force-renewal -d ${SERVER_NAME}
    depends_on:
      - nginx
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  content-node:
    image: earthfast/content-node:latest
    environment:
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - DATABASE_DIR=/data/database
      - ETH_RPC_ENDPOINT=${RPC_URL}
      - HOSTING_CACHE_DIR=/data/hosting_cache
      - HTTP_PORT=5000
      - NODE_ID=${NODE_ID}
    volumes:
      - ${DATABASE_DIR}:/data/database
      - ${HOSTING_CACHE_DIR}:/data/hosting_cache
    ports:
      - "5000:5000"
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 60 --cleanup
    restart: unless-stopped

volumes:
  letsencrypt:
