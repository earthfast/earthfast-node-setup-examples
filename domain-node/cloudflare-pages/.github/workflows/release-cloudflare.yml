name: Cloudflare
on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    # every day at midnight
    - cron:  '0 0 * * *'
permissions:
  contents: write
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          path: cf-worker

      - uses: actions/checkout@v4
        with:
          repository: armada-network/armada-service-worker
          token: ${{ secrets.GH_TOKEN }}
          path: armada-sw

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
          cache-dependency-path: armada-sw/package-lock.json

      - name: Install service worker dependencies
        timeout-minutes: 2
        run: |
          cd $GITHUB_WORKSPACE/armada-sw
          npm i
          npm run build

      - name: Fetch latest content nodes from ETH chain
        id: fetch_eth_content_node_data
        run: |
          content_nodes=$(npx armada-cli reservation list ${{ vars.PROJECT_ID }} --json | jq 'map(.host) | join (",")')
          echo "content_nodes=$content_nodes" >> $GITHUB_OUTPUT
          echo $content_nodes "content_nodes"

      - name: Copy required files to cf-worker
        run: |
          cd $GITHUB_WORKSPACE/armada-sw
          mkdir -p build/armada
          mkdir -p $GITHUB_WORKSPACE/cf-worker/build
          cp dist/templates/main.js.tmpl $GITHUB_WORKSPACE/cf-worker/build/armada-sw.js
          cp -r dist/public/* $GITHUB_WORKSPACE/cf-worker/build/

      - name: Update build assets
        run: |
          cd $GITHUB_WORKSPACE/cf-worker
          sed -i "s/{{.ContentNodes}}/${{ steps.fetch_eth_content_node_data.outputs.content_nodes }}/g" build/armada-sw.js
          sed -i "s/{{.BootstrapNodes}}//g" build/armada-sw.js
          sed -i "s/{{.ProjectID}}/${{ vars.PROJECT_ID }}/g" build/armada-sw.js

      - name: Publish built assets to GitHub
        run: |
          cd $GITHUB_WORKSPACE/cf-worker
          if [[ -z $(git status -s) ]]
          then
            echo "No updates to publish, exiting"
            exit
          else
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add -A
            git commit -m "Update build assets via GitHub Actions"
            git push origin main
            exit
          fi